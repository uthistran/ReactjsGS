{"version":3,"sources":["index.js"],"names":["Square","clsnames","classes","Object","entries","filter","map","key","join","classNames","this","props","isActive","className","onClick","value","React","Component","Board","i","activeSquares","indexOf","squares","renderSquare","calculateWinner","output","lines","length","a","b","c","Game","state","history","Array","fill","xIsNext","stepNumber","slice","setState","concat","step","winner","status","current","moves","move","desc","jumpTo","player","getActiveSquares","handleClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9674f6d4.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nfunction classNames(classes) {\r\n    return Object.entries(classes)\r\n      .filter(([key, value]) => value)\r\n      .map(([key, value]) => key)\r\n      .join(' ');\r\n  }\r\n  \r\n\r\nclass Square extends React.Component {  \r\n    render() {\r\n        const classes = {\r\n            'square' : true,\r\n            'highlightSquare' : this.props.isActive ? true : false\r\n        }\r\n        const clsnames = classNames(classes);\r\n        return (\r\n            <button\r\n                className={clsnames}\r\n                onClick={() => this.props.onClick()}>\r\n                {this.props.value}\r\n            </button>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nclass Board extends React.Component {\r\n    isActive(i) {\r\n        const activeSquares = this.props.activeSquares;\r\n        if(activeSquares)\r\n            return activeSquares.indexOf(i) > -1\r\n        return false\r\n    }\r\n    renderSquare(i) {\r\n        \r\n        \r\n        return (\r\n            <Square\r\n                value={this.props.squares[i]}\r\n                onClick={() => this.props.onClick(i)}\r\n                isActive ={this.isActive(i)}\r\n            />\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(0)}\r\n                    {this.renderSquare(1)}\r\n                    {this.renderSquare(2)}\r\n                </div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(3)}\r\n                    {this.renderSquare(4)}\r\n                    {this.renderSquare(5)}\r\n                </div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(6)}\r\n                    {this.renderSquare(7)}\r\n                    {this.renderSquare(8)}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction calculateWinner(squares) {\r\n    let output = {}\r\n    const lines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6],\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        const [a, b, c] = lines[i];\r\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n            output[\"lines\"] = lines[i];\r\n            output[\"player\"] = squares[a];\r\n            return output;\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\nclass Game extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            history: [\r\n                { squares: Array(9).fill(null) }\r\n            ],\r\n            xIsNext: true,\r\n            stepNumber: 0\r\n        }\r\n    }\r\n\r\n    handleClick(i) {\r\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n        const current = history[history.length - 1];\r\n        const squares = current.squares.slice();\r\n\r\n        if (calculateWinner(squares) || squares[i]) {\r\n            return;\r\n        }\r\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n        this.setState({\r\n            history: history.concat([{\r\n                squares: squares\r\n            }]),\r\n            xIsNext: !this.state.xIsNext,\r\n            stepNumber: history.length\r\n        })\r\n    }\r\n\r\n    jumpTo(step) {\r\n        this.setState({\r\n            stepNumber: step,\r\n            xIsNext: (step % 2 === 0)\r\n        }\r\n        )\r\n    }\r\n\r\n    getActiveSquares(winner) {\r\n        if(winner){\r\n            return winner.lines;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n        const history = this.state.history;\r\n        const current = history[this.state.stepNumber];\r\n        const winner = calculateWinner(current.squares);\r\n        const moves = history.map((step, move) => {\r\n            const desc = move ? 'Go To Move #' + move : 'Goto Game Start';\r\n            return (\r\n                <li key={move}>\r\n                    <button onClick={() => this.jumpTo(move)}>{desc}</button>\r\n                </li>\r\n            )\r\n        })\r\n        let status;\r\n        if (winner) {\r\n            status = 'Winner is : ' + winner.player;\r\n        }\r\n        else {\r\n            status = 'Next player is : ' + (this.state.xIsNext ? 'X' : 'O')\r\n        }\r\n        return (\r\n            <div className=\"game\">\r\n                <div className=\"game-board\">\r\n                    <Board\r\n                        squares={current.squares}\r\n                        activeSquares = {this.getActiveSquares(winner)}\r\n                        onClick={(i) => { this.handleClick(i) }} />\r\n                </div>\r\n                <div className=\"game-info\">\r\n                    <div>{status}</div>\r\n                    <ol>{moves}</ol>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n    <Game />,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}